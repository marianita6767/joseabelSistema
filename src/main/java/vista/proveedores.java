/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author buitr
 */
public class proveedores extends javax.swing.JPanel {

    /**
     * Creates new form proveedores
     */
    public proveedores() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Añadir = new RSMaterialComponent.RSButtonMaterialTwo();
        rSButtonMaterialTwo3 = new RSMaterialComponent.RSButtonMaterialTwo();
        Buscar = new RSMaterialComponent.RSButtonMaterialTwo();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla1 = new RSMaterialComponent.RSTableMetroCustom();

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(1290, 730));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Añadir.setBackground(new java.awt.Color(29, 30, 51));
        Añadir.setText("Añadir+");
        Añadir.setBackgroundHover(new java.awt.Color(29, 30, 31));
        Añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirActionPerformed(evt);
            }
        });
        jPanel4.add(Añadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 40, 86, 37));

        rSButtonMaterialTwo3.setBackground(new java.awt.Color(29, 30, 51));
        rSButtonMaterialTwo3.setText("Eliminar -");
        rSButtonMaterialTwo3.setBackgroundHover(new java.awt.Color(29, 30, 31));
        rSButtonMaterialTwo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonMaterialTwo3ActionPerformed(evt);
            }
        });
        jPanel4.add(rSButtonMaterialTwo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 40, 86, 37));

        Buscar.setBackground(new java.awt.Color(29, 30, 51));
        Buscar.setText("Buscar");
        Buscar.setBackgroundHover(new java.awt.Color(29, 30, 31));
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        jPanel4.add(Buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 86, 37));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 262, 30));

        Tabla1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "esteban", "24527", "324", "madera"},
                {"2", "juan", "36778", "789", "aluminio"},
                {"3", "brayan", "545555456384563", "56g", "pimienta negra resien molida"}
            },
            new String [] {
                "#", "Nombre", "Telefono", "Direccion", "Producto"
            }
        ));
        Tabla1.setBackgoundHead(new java.awt.Color(29, 30, 51));
        Tabla1.setBackgoundHover(new java.awt.Color(29, 30, 51));
        Tabla1.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        Tabla1.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        Tabla1.setSelectionBackground(new java.awt.Color(29, 30, 91));
        jScrollPane2.setViewportView(Tabla1);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 1180, 480));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1293, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1293, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1293, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1293, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirActionPerformed
   // Crear un array para almacenar los datos
    String[] datos = new String[3];
    
    // Pedir al usuario que ingrese los datos
    datos[0] = JOptionPane.showInputDialog(this, "Ingrese el Nombre:");
    datos[1] = JOptionPane.showInputDialog(this, "Ingrese la Telefono:");
    datos[2] = JOptionPane.showInputDialog(this, "Ingrese la Direccion:");
    datos[3] = JOptionPane.showInputDialog(this, "Ingrese la Producto:");
  

    // Validar que los campos no estén vacíos
    for (String dato : datos) {
        if (dato == null || dato.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }


    // Generar un ID aleatorio de 5 cifras
    int newId;
    do {
        newId = generateRandomId(5); // Cambia el número de cifras aquí si es necesario
    } while (idExists(newId)); // Verifica que el ID no se repita

    // Agregar los datos a la tabla
    DefaultTableModel model = (DefaultTableModel) Tabla1.getModel();
    int rowCount = model.getRowCount(); // Obtener el número actual de filas
    Object[] rowData = {rowCount + 1, newId, datos[0], datos[1], datos[2],datos[3]}; // Asignar el número de fila
    model.addRow(rowData);

    }//GEN-LAST:event_AñadirActionPerformed

    private void rSButtonMaterialTwo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonMaterialTwo3ActionPerformed
        // TODO add your handling code here:
        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) Tabla1.getModel();

        // Obtener los índices de las filas seleccionadas
        int[] selectedRows = Tabla1.getSelectedRows();

        // Verificar si se ha seleccionado alguna fila
        if (selectedRows.length > 0) {
            // Eliminar las filas seleccionadas en orden inverso
            for (int i = selectedRows.length - 1; i >= 0; i--) {
                model.removeRow(selectedRows[i]);
            }

            // Actualizar la numeración de la columna #
            for (int i = 0; i < model.getRowCount(); i++) {
                model.setValueAt(i + 1, i, 0); // Actualiza la columna # (índice 0)
            }

            // Mostrar un mensaje de confirmación
            JOptionPane.showMessageDialog(this, "Eliminados correctamente.", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Si no hay filas seleccionadas, mostrar un mensaje de advertencia
            JOptionPane.showMessageDialog(this, "Por favor, selecciona al menos un registro para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_rSButtonMaterialTwo3ActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        String searchText = jTextField1.getText().trim().toLowerCase(); // Obtener el texto de búsqueda

        // Obtener el sorter de la tabla
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) Tabla1.getModel());
        Tabla1.setRowSorter(sorter);

        if (searchText.isEmpty()) {
            // Si el campo de búsqueda está vacío, mostrar todas las filas
            sorter.setRowFilter(null); // Restablecer el filtro
            return;
        }

        // Determinar la longitud del texto de búsqueda
        if (searchText.length() == 1 && Character.isDigit(searchText.charAt(0))) {
            // Si es un solo número, buscar por #
            sorter.setRowFilter(new RowFilter<DefaultTableModel, Integer>() {
                @Override
                public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Integer> entry) {
                    String numberCellValue = entry.getStringValue(0).toLowerCase(); // Columna #
                    return numberCellValue.contains(searchText);
                }
            });
        } else if (searchText.length() == 5 && searchText.chars().allMatch(Character::isDigit)) {
            // Si son 5 números, buscar por ID
            sorter.setRowFilter(new RowFilter<DefaultTableModel, Integer>() {
                @Override
                public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Integer> entry) {
                    String idCellValue = entry.getStringValue(1).toLowerCase(); // Columna ID
                    return idCellValue.contains(searchText);
                }
            });
        } else {
            // Si no coincide con las condiciones anteriores, buscar en las columnas de material, tipo y estado
            sorter.setRowFilter(new RowFilter<DefaultTableModel, Integer>() {
                @Override
                public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Integer> entry) {
                    String nombre = entry.getStringValue(2).toLowerCase(); // Columna de material
                    String apellido = entry.getStringValue(3).toLowerCase(); // Columna de tipo
                    // Verificar si alguno de los valores contiene el texto de búsqueda
                    return nombre.contains(searchText) || apellido.contains(searchText);
                }
            });

        }

        // Si no se encontró ninguna coincidencia, puedes mostrar un mensaje o realizar otra acción
        if (Tabla1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No se encontraron resultados.");
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    
    private int generateRandomId(int digits) {
    Random random = new Random();
    int lowerBound = (int) Math.pow(10, digits - 1); // 10^(n-1)
    int upperBound = (int) Math.pow(10, digits) - 1; // 10^n - 1
    return random.nextInt(upperBound - lowerBound + 1) + lowerBound;
}

    private boolean idExists(int id) {
    DefaultTableModel model = (DefaultTableModel) Tabla1.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        if ((Integer) model.getValueAt(i, 0) == id) { // Asegúrate de que estás verificando la columna correcta
            return true; // El ID ya existe
        }
    }
    return false; // El ID no existe
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialTwo Añadir;
    private RSMaterialComponent.RSButtonMaterialTwo Buscar;
    private RSMaterialComponent.RSTableMetroCustom Tabla1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private RSMaterialComponent.RSButtonMaterialTwo rSButtonMaterialTwo3;
    // End of variables declaration//GEN-END:variables
}

