/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista.Caja;

import controlador.Ctrl_CajaEgresos;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import modelo.Conexion;

/**
 *
 * @author ADSO
 */
public class EditEgresos extends javax.swing.JDialog {

    private int idEgresoActual;
    private int id_codigo;
    private boolean isEditable = false;

    /**
     * Creates new form EditEgresos
     */
    private Ctrl_CajaEgresos controladorEgresos;

    public EditEgresos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        txtPago.setEnabled(false);
        txtCantidadEdit.setEditable(false);
        txtDetalleEdit.setEditable(false);
        comboCategoria.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnGuardar = new rojeru_san.RSButtonRiple();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnCancelar = new rojeru_san.RSButtonRiple();
        txtPago = new com.toedter.calendar.JDateChooser();
        txtCantidadEdit = new RSMaterialComponent.RSTextFieldMaterial();
        jLabel2 = new javax.swing.JLabel();
        txtDetalleEdit = new RSMaterialComponent.RSTextFieldMaterial();
        jLabel3 = new javax.swing.JLabel();
        comboCategoria = new RSMaterialComponent.RSComboBoxMaterial();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(46, 49, 82));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century751 BT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Egresos");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 50));

        btnGuardar.setBackground(new java.awt.Color(46, 49, 82));
        btnGuardar.setText("Editar");
        btnGuardar.setFont(new java.awt.Font("Humnst777 BlkCn BT", 1, 14)); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 140, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel9.setText("Detalle:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 90, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel10.setText("Fecha Pago:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnCancelar.setBackground(new java.awt.Color(46, 49, 82));
        btnCancelar.setText("Volver");
        btnCancelar.setFont(new java.awt.Font("Humnst777 BlkCn BT", 1, 14)); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 140, -1));

        txtPago.setBackground(new java.awt.Color(255, 255, 255));
        txtPago.setForeground(new java.awt.Color(255, 255, 255));
        txtPago.setDateFormatString("y-MM-d");
        txtPago.setMaxSelectableDate(new java.util.Date(253370786472000L));
        jPanel1.add(txtPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 320, 30));

        txtCantidadEdit.setForeground(new java.awt.Color(0, 0, 0));
        txtCantidadEdit.setPlaceholder("Cantidad de Egreso");
        jPanel1.add(txtCantidadEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 390, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setText("Cantidad Gasto:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        txtDetalleEdit.setForeground(new java.awt.Color(0, 0, 0));
        txtDetalleEdit.setPlaceholder("Detalle del Producto");
        jPanel1.add(txtDetalleEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 390, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel3.setText("Categoria:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 70, -1));

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione categoria:", "Servicios Publicos", "Compra de Productos e Insumos", "Arriendo", "Nómina", "Prestamos", "Mantenimiento y reparaciones", "Transporte, domicilios y logistica", "Otros" }));
        comboCategoria.setColorMaterial(new java.awt.Color(0, 0, 0));
        comboCategoria.setFont(new java.awt.Font("Roboto Bold", 0, 14)); // NOI18N
        comboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(comboCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 420, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (!isEditable) {
            // Modo "Editar" - Habilitar campos y cambiar texto a "Guardar"
            isEditable = true;
            txtPago.setEnabled(true);
            txtCantidadEdit.setEditable(true);
            txtDetalleEdit.setEditable(true);
            comboCategoria.setEnabled(true);
            btnGuardar.setText("Guardar");
            jPanel2.setBackground(new java.awt.Color(36, 174, 255));
            jLabel1.setForeground(new java.awt.Color(46, 49, 82));

        } else {
            int confirm = JOptionPane.showConfirmDialog(this,
                    "¿Está seguro de guardar los cambios?",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            // Validación de campos mejorada
            if (txtPago.getDate() == null || txtDetalleEdit.getText().trim().isEmpty()
                    || txtCantidadEdit.getText().trim().isEmpty() || comboCategoria.getSelectedIndex() <= 0) {
                JOptionPane.showMessageDialog(this,
                        "Todos los campos son obligatorios",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                // Obtener valores
                java.sql.Date fecha = new java.sql.Date(txtPago.getDate().getTime());
                String descripcion = txtDetalleEdit.getText().trim();
                double cantidad = Double.parseDouble(txtCantidadEdit.getText().trim());
                String categoria = comboCategoria.getSelectedItem().toString();

                try (Connection con = Conexion.getConnection()) {
                    if (idEgresoActual <= 0) {
                        // Insertar nuevo registro
                        try (PreparedStatement ps = con.prepareStatement(
                                "INSERT INTO caja (fecha, monto, descripcion, categoria, movimiento) VALUES (?, ?, ?, ?, 'egreso')")) {
                            ps.setDate(1, fecha);
                            ps.setDouble(2, cantidad);
                            ps.setString(3, descripcion);
                            ps.setString(4, categoria);

                            int result = ps.executeUpdate();
                            if (result > 0) {
                                JOptionPane.showMessageDialog(this,
                                        "Egreso guardado correctamente",
                                        "Éxito",
                                        JOptionPane.INFORMATION_MESSAGE);
                                this.dispose();
                            }
                        }
                    } else {
                        // Actualizar registro existente
                        try (PreparedStatement ps = con.prepareStatement(
                                "UPDATE caja SET fecha = ?, monto = ?, descripcion = ?, categoria = ? WHERE id_codigo = ? AND movimiento = 'egreso'")) {
                            ps.setDate(1, fecha);
                            ps.setDouble(2, cantidad);
                            ps.setString(3, descripcion);
                            ps.setString(4, categoria);
                            ps.setInt(5, idEgresoActual);

                            int affectedRows = ps.executeUpdate();
                            if (affectedRows > 0) {
                                JOptionPane.showMessageDialog(this,
                                        "Egreso actualizado correctamente",
                                        "Éxito",
                                        JOptionPane.INFORMATION_MESSAGE);
                                this.dispose();
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        "No se pudo actualizar el egreso",
                                        "Error",
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,
                        "El monto debe ser un número válido",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this,
                        "Error al guardar: " + e.getMessage(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
            isEditable = false;
            txtPago.setEnabled(false);
            txtCantidadEdit.setEditable(false);
            txtDetalleEdit.setEditable(false);
            comboCategoria.setEnabled(false);
            btnGuardar.setText("Editar");
            jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void comboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditEgresos dialog = new EditEgresos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btnCancelar;
    private rojeru_san.RSButtonRiple btnGuardar;
    private RSMaterialComponent.RSComboBoxMaterial comboCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private RSMaterialComponent.RSTextFieldMaterial txtCantidadEdit;
    private RSMaterialComponent.RSTextFieldMaterial txtDetalleEdit;
    private com.toedter.calendar.JDateChooser txtPago;
    // End of variables declaration//GEN-END:variables
public void cargarDatosEgreso(int id, java.sql.Date fecha, double monto, String descripcion, String categoria) {
        idEgresoActual = id;
        id_codigo = id;

        // Establecer los valores en los campos
        txtPago.setDate(fecha);
        txtCantidadEdit.setText(String.valueOf(monto));
        txtDetalleEdit.setText(descripcion);

        // Seleccionar la categoría en el combo box
        for (int i = 0; i < comboCategoria.getItemCount(); i++) {
            if (comboCategoria.getItemAt(i).equals(categoria)) {
                comboCategoria.setSelectedIndex(i);
                break;
            }
        }
    }
}
